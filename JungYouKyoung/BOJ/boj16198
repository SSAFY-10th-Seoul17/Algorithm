import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;
import java.util.StringTokenizer;

public class boj16198 {

	private static List<Integer> arr;
	private static int n;

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		
		n = Integer.parseInt(st.nextToken());
		arr = new ArrayList<Integer>();
		st = new StringTokenizer(br.readLine(), " ");
		for (int i = 0; i < n; i++) {
			arr.add(Integer.parseInt(st.nextToken()));
		}
//		System.out.println(arr);
		combination();
		System.out.println(max);
		
	}
	
	static int result = 0;
	static int max = Integer.MIN_VALUE;
//	static int[] numbers;
	private static void combination() {
		if(arr.size() == 2) {
			//Math.max 값 저장하게 함
			max = Math.max(max, result);
			return;
		}
		
		for (int i = 1; i < arr.size()-1; i++) { //양옆은 선택안됨
			int current = arr.get(i); //다시 집어넣을 값
			result += arr.get(i-1)*arr.get(i+1);
			arr.remove(i);
			combination();
			arr.add(i, current);//원상복귀
			result -= arr.get(i-1)*arr.get(i+1);
		}
		
	}

}
